/* #################### ################################ #################### */
/* #################### RELEVANT CODE STARTS AT LINE 145 #################### */
/* #################### ################################ #################### */

// Inter / Sans-serif
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap');

/* Global Styles */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  text-decoration: none;
}

html {
  $black: #303030;
  $grey: #909090;
  $off-white: #edeee9;
  $code: #d8dbce;
  position: relative;
  overflow-x: hidden;
  scroll-behavior: smooth;
  $sans-serif: 'Inter', sans-serif;
  background-color: $off-white;

  body {
    background-color: $off-white;
    color: $black;
    font-family: $sans-serif;
    min-height: 100vh;
    width: 100%;
    padding: 2.5vh 10vw;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: flex-start;

    .container {
      width: 100%;
      max-width: 768px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding: 2rem 2rem 1.5rem;
      background-color: $code;

      @media (min-width: 768px) {
        flex-direction: row;
        align-items: center;
      }

      .cta-form {
        margin-bottom: 2rem;
        text-align: center;

        @media (min-width: 768px) {
          margin-bottom: 0;
          margin-right: 2rem;
          text-align: left;
        }

        h2 {
          font-size: 1.5rem;
          width: 100%;
          max-width: 25ch;
          margin: 0 auto;
          text-align: center;

          @media (min-width: 768px) {
            text-align: left;
            margin: 0;
          }
        }

        p {
          margin-top: 1rem;
          font-size: 1rem;
          width: 100%;
          max-width: 24ch;
        }
      }
    }
  }

  // Before someone yells at me for my improper use of SCSS‚Äî I know‚Äî
  // This isn't using SCSS's 'cascading' methodology. The form's styling is outside of the body tag.
  // I'm just doing it this way so I can minimize non-relevant code. üòÅ
  /* #################### ########################### #################### */
  /* #################### All form-related CSS below. #################### */
  /* #################### ########################### #################### */

  .form {
    align-self: center;
  }

  // I would use the BEM method here for declaring styles,
  // but for the sake of clarity, I decided not to.*

  // Just some basic input field styling.
  .form__input {
    width: clamp(120px, 50vw, 420px);
    height: 2.5rem;
    padding: 0 1.25rem;
    border: 1px solid $black;
    border-radius: 2px;
    margin: 0.625rem auto;
    transition: all 250ms;
    @media (min-width: 768px) {
      width: clamp(120px, 35vw, 420px);
    }

    // This is basically saying when the form__input class is in focus
    &:focus {
      outline: none;
      border-top-color: rgba(0, 0, 0, 0.1);
    }

    // How to read this:
    /* When the input field (.form__input) is in focus, 
         transform the .form__label and change colors*/
    /* ALSO, if the input field's placeholder is NOT shown (when the input field has content),
         transform the .form__label and change colors. */
    &:focus + .form__label,
    &:not(:placeholder-shown) + .form__label {
      transform: translateY(-4.5rem) scale(1);
      color: $black;
    }

    /* THIS PART IS IMPORTANT!! */
    /* The block below hides the placeholder entirely. */
    /* For all intents and purposes, the placeholder no longer exists. */
    /* What shows on the input field is only the label*. */
    /* HOWEVER, the input fields still recognizes that the placeholder exists!*/
    /* The placeholder is just invisible. We need the placeholder to exist for
         some weird CSS stuff. If we skip this, we can't make it CSS-only. */
    &::placeholder {
      display: none;
      color: transparent;

      // Prevents users from highlighting the placeholder.
      -webkit-user-select: none; /* Safari */
      -ms-user-select: none; /* IE 10 and IE 11 */
      user-select: none; /* Standard syntax */
    }

    // How to read this:
    /* When the placeholder is NOT shown,
         style the top border. */
    /* This makes the top border fade-out when the placeholder disappears. */
    &:not(:placeholder-shown) {
      border-top-color: rgba(0, 0, 0, 0.5);
    }
  }

  .form__label {
    font-size: 1rem;
    color: $grey;
    display: block;

    /* Moves the label on TOP of the placeholder */
    /* You'll need to change this as needed */
    transform: translate(1.25rem, -2.5rem);
    transform-origin: 0 0; /* Used later for transitions */
    transition: all 500ms;

    // Prevents users from highlighting the label.
    -webkit-user-select: none; /* Safari */
    -ms-user-select: none; /* IE 10 and IE 11 */
    user-select: none; /* Standard syntax */

    /* THIS PART IS IMPORTANT! */
    /* This line prevents the label from being selected.*/
    /* This is crucial because if this line doesn't exist, users can
         click on the label, instead of the input field. That's bad UX! */
    pointer-events: none;
  }
}

.button_56 {
  align-items: center;
  background-color: #fee6e3;
  border: 2px solid #111;
  border-radius: 8px;
  box-sizing: border-box;
  color: #111;
  cursor: pointer;
  display: flex;
  font-family: Inter, sans-serif;
  font-size: 16px;
  height: 48px;
  justify-content: center;
  line-height: 24px;
  max-width: 100%;
  padding: 0 25px;
  position: relative;
  text-align: center;
  text-decoration: none;
  user-select: none;
  -webkit-user-select: none;
  touch-action: manipulation;
  margin-bottom: 30px;
}

.button_56:after {
  background-color: #111;
  border-radius: 8px;
  content: '';
  display: block;
  height: 48px;
  left: 0;
  width: 100%;
  position: absolute;
  top: -2px;
  transform: translate(8px, 8px);
  transition: transform 0.2s ease-out;
  z-index: -1;
}

.button_56:hover:after {
  transform: translate(0, 0);
}

.button_56:active {
  background-color: #ffdeda;
  outline: 0;
}

.button_56:hover {
  outline: 0;
}

@media (min-width: 768px) {
  .button_56 {
    padding: 0 40px;
  }
}
.filter_container {
  margin-top: 30px;
}
